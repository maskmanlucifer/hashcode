<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,700&display=swap" rel="stylesheet"/>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="stylesheet" href="index.css">
    <title>hashcode</title>
</head>
<body>
    <nav class="navbar">
        <ul class="navbar-nav">
            <li>
                <a href="#">
                    <i class="material-icons">tag</i>
                </a>
                <span class="tooltip">hashcode</span>
            </li>
            <li>
                <a href="./home">
                    <i class="material-icons">home</i>
                </a>
                <span class="tooltip">homepage</span>
            </li>
            <li>
                <a href="./snippet">
                    <i class="material-icons">code</i>
                </a>
                <span class="tooltip">snippets</span>
            </li>
            <li>
                <a href="./contest">
                    <i class="material-icons">emoji_objects</i>
                </a>
                <span class="tooltip">contests</span>
            </li>
            <li>
                <a href="./visualizer">
                    <i class="material-icons">assessment</i>
                </a>
                <span class="tooltip">visualizer</span>
            </li>
            <%if(1){%>
            <li>
                <a href="./profile">
                    <i class="material-icons">account_circle</i>
                </a>
                <span class="tooltip">profile</span>
            </li>
            <%} else {%>
            <li>
                <a href="#">
                    <i class="material-icons">login</i>
                </a>
                <span class="tooltip">login</span>
            </li>
            <%}%>
            <li>
                <a href="./home">
                    <i class="material-icons">logout</i>
                </a>
                <span class="tooltip">logout</span>
            </li>
            <li>
                <a href="#">
                    <i class="material-icons">view_in_ar</i>
                </a>
                <span class="tooltip">source code</span>
            </li>
        </ul>
    </nav>
    <main class="main">
       <div class="filter_bar">
        <!-- all gerenal cards -->
        <span id="general" class="active">GENERAL</span>
        <span id="stl">STL</span>
        <span id="buzz">BUZZ</span>
       </div>
       
       <div class="card_list_general general">
          <span>Platforms</span>
          <a href="https://codeforces.com/">Codeforces</a>
          <a href="https://www.codechef.com/">Codechef</a>
          <a href="https://atcoder.jp/">Atcoder</a>
       </div>

       <div class="card_list_general general">
        <span>IDEs</span>
        <a href="https://www.sublimetext.com/3">Sublime-Text (Offline)</a>
        <a href="https://cpeditor.org/">CP Editor (Offline)</a>
        <a href="https://www.codechef.com/ide">Codechef (Online)</a>
       </div>
       
       <div class="card_list_general general">
        <span>Tools</span>
        <a href="https://oeis.org/">OEIS (Finding number patterns)</a>
        <a href="https://cfviz.netlify.app/">CF viz (Growth tracker)</a>
        <a href="https://chrome.google.com/webstore/detail/cf-predictor/ocfloejijfhhkkdmheodbaanephbnfhn">CF predictor (Rating predictor)</a>
        <a href="https://visualgo.net/en">Visu Algo (Algorithm visualizer)</a>
       </div>

       <div class="card_list_general general">
        <span>You tube channels</span>
        <a href="https://www.youtube.com/channel/UCBr_Fu6q9iHYQCh13jmpbrg">Errichto</a>
        <a href="https://www.youtube.com/channel/UCpvS3EykHW--l0ogUhMEjEw">GalenCoin</a>
        <a href="https://www.youtube.com/channel/UCXbCohpE9IoVQUD2Ifg1d1g">SecondThread</a>
        <a href="https://www.youtube.com/channel/UCKuDLsO0Wwef53qdHPjbU2Q">WilliamLin</a>
        <a href="https://www.youtube.com/c/ecnerwala">Ecnerwala</a>
        <a href="https://www.youtube.com/channel/UCGS5ZzcSAymQbWZvNoKOFhQ/featured">Demoralizer</a>
       </div>

       <div class="card_list_general general">
        <span>Coding Competitions</span>
        <a href="https://icpc.global/">ACM ICPC</a>
        <a href="https://www.facebook.com/hackercup/">Facebook Hacker Cup</a>
        <a href="https://codingcompetitions.withgoogle.com/codejam">Google Code Jam</a>
        <a href="https://codingcompetitions.withgoogle.com/hashcode/">Google Hashcode</a>
        <a href="https://tco20.topcoder.com/">Topcoder Open</a>
       </div>

       <!-- adding buzz cards -->

       <div class="card_list_buzz buzz notshow">
        <p>The upper bound on the number of divisors of any number n is roughly (n <sup>(1/3)</sup>)</p>
       </div>

       <div class="card_list_buzz buzz notshow">
        <p>The maximum gap between two consecutive primes for number â‰¤ 10<sup>9</sup> is around 300</p>
       </div>

       <div class="card_list_buzz buzz notshow">
        <p>For two numbers a and b : (a + b) = (a xor b) + 2 * (a and b)</p>
       </div>

       <div class="card_list_buzz buzz notshow">
        <p>Any even number greater than 2 can be split into two prime numbers</p>
       </div>
       
       <!-- adding stl cards -->
       <div class="card_list_stl stl notshow">
        <span class="heading">Mashup</span>
        <div class="card_list_stl_content">
            <div class="stl_function">
                <span class="highlight">isalpha(c)</span><span>Checks if character c is alphabet</span>
            </div>

            <div class="stl_function">
                <span class="highlight">isdigit(c)</span><span>Checks if character c is digit (0-9)</span>
            </div>

            <div class="stl_function">
                <span class="highlight">__gcd(x,y)</span><span>Returns GCD of x and y</span>
            </div>

            <div class="stl_function">
                <span class="highlight">__builtin_popcount(x)</span><span>Returns number of set bits in unsigned int x</span>
            </div>

            <div class="stl_function">
                <span class="highlight">min{x1,x2,x3...}</span><span>Returns min among x1,x2,x3...</span>
            </div>

            <div class="stl_function">
                <span class="highlight">max_element(V.begin(),V.end())</span><span>Pointer to max element in vector V</span>
            </div>

        </div>
       </div>
       <div class="card_list_stl stl notshow">
        <span class="heading">Vector</span>
        <div class="card_list_stl_content">
            <div class="stl_function">
            <span class="highlight">V.push_back(x)</span><span>Pushes element x at the end of vector</span>
            </div>

            <div class="stl_function">
            <span class="highlight">V.pop_back()</span><span>Pops element from the end of vector</span>
            </div>

            <div class="stl_function">
                <span class="highlight">V.size()</span><span>Returns size of vector</span>
            </div>

            <div class="stl_function">
                <span class="highlight">V.back()</span><span>Returns reference to vector's last element</span>
            </div>

            <div class="stl_function">
                <span class="highlight">lower_bound(V.begin(),V.end(),x)</span><span>Returns pointer to the element >=x</span>
            </div>

            <div class="stl_function">
                <span class="highlight">upper_bound(V.begin(),V.end(),x)</span><span>Returns pointer to the element >x</span>
            </div>

            <div class="stl_function">
                <span class="highlight">binary_search(V.begin(),V.end(),x)</span><span>Check if x exist in V (sorted)</span>
            </div>

            <div class="stl_function">
                <span class="highlight">reverse(V.begin(),V.end())</span><span>Reverses vector V</span>
            </div>

            <div class="stl_function">
                <span class="highlight">sort(V.begin(),V.end())</span><span>Sort's vector V</span>
            </div>
        </div>
       </div>

       <div class="card_list_stl stl notshow">
        <span class="heading">Map</span>
        <div class="card_list_stl_content">
            <div class="stl_function">
                <span class="highlight">clear()</span><span>Erases all key-value pairs of map</span>
            </div>

            <div class="stl_function">
                <span class="highlight">count(x)</span><span>Checks if key x exists in map</span>
            </div>

            <div class="stl_function">
                <span class="highlight">find(x)</span><span>If find, returns pointer to key x</span>
            </div>

            <div class="stl_function">
                <span class="highlight">size()</span><span>Returns size of map</span>
            </div>
        </div>
       </div>
       <div class="card_list_stl stl notshow">
        <span class="heading">Set</span>
        <div class="card_list_stl_content">
            <div class="stl_function">
                <span class="highlight">begin()</span><span>Returns pointer to first element</span>
            </div>

            <div class="stl_function">
                <span class="highlight">rbegin()</span><span>Returns pointer to last element</span>
            </div>

            <div class="stl_function">
                <span class="highlight">clear()</span><span>Erases all elements from set</span>
            </div>

            <div class="stl_function">
                <span class="highlight">count(x)</span><span>Checks if x exists in set</span>
            </div>

            <div class="stl_function">
                <span class="highlight">size()</span><span>Returns size of set</span>
            </div>

            <div class="stl_function">
                <span class="highlight">insert(x)</span><span>Inserts element x in set</span>
            </div>

            <div class="stl_function">
                <span class="highlight">find(x)</span><span>If exist, returns pointer to element x</span>
            </div>

            <div class="stl_function">
                <span class="highlight">erase(x)</span><span>Erases element x, if x is value</span>
            </div>
            
            <div class="stl_function">
                <span class="highlight">erase(x)</span><span>Erases element at position x, if x is address</span>
            </div>

            <div class="stl_function">
                <span class="highlight">st.lower_bound(x)</span><span>Returns pointer to element >= x</span>
            </div>

            <div class="stl_function">
                <span class="highlight">st.upper_bound(x)</span><span>Returns pointer to element > x</span>
            </div>
        </div>
       </div>
       <div class="card_list_stl stl notshow">
        <span class="heading">Queue</span>
        <div class="card_list_stl_content">
            <div class="stl_function">
                <span class="highlight">back()</span><span>Reference to last element</span>
            </div>

            <div class="stl_function">
                <span class="highlight">empty()</span><span>Checks if queue is empty</span>
            </div>

            <div class="stl_function">
                <span class="highlight">front()</span><span>Reference to first element</span>
            </div>

            <div class="stl_function">
                <span class="highlight">push(x)</span><span>Pushes x at the back of queue</span>
            </div>

            <div class="stl_function">
                <span class="highlight">pop()</span><span>Pops element from back of queue</span>
            </div>

            <div class="stl_function">
                <span class="highlight">size()</span><span>Returns size of queue</span>
            </div>

        </div>
       </div>
       <div class="card_list_stl stl notshow">
        <span class="heading">Stack</span>
        <div class="card_list_stl_content">
            <div class="stl_function">
                <span class="highlight">push(x)</span><span>Push x at the top of stack</span>
            </div>

            <div class="stl_function">
                <span class="highlight">pop()</span><span>Pop element from top of x</span>
            </div>

            <div class="stl_function">
                <span class="highlight">top()</span><span>Reference to element at top of stack</span>
            </div>

            <div class="stl_function">
                <span class="highlight">size()</span><span>Returns size of stack</span>
            </div>

            <div class="stl_function">
                <span class="highlight">empty()</span><span>Checks if stack is empty</span>
            </div>

        </div>
       </div>
    </main>
    <script src="main.js"></script>
</body>
</html> 